---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  {{ include "redis.fullname" . }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "redis.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "redis.fullname" . }}-headless
  replicas: 1 
  template:
    metadata:
      labels:
        {{- include "redis.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "redis.fullname" . }}
      terminationGracePeriodSeconds: 30
      securityContext:
        {{- toYaml .Values.redis.podSecurityContext | nindent 8 }}
      containers:
      - name: redis
        image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        - name: REDIS_AOF_ENABLED
          value: "yes"
        ports:
        - containerPort: 6379
          name: redis
        securityContext:
            {{- toYaml .Values.redis.securityContext | nindent 10 }}
        livenessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 5
          failureThreshold: 5
          successThreshold: 1
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.redis.resources | nindent 10 }}
        volumeMounts:
        - name: redis-data
          mountPath: /bitnami/redis/data
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: 
      {{ toYaml .Values.redis.persistence.accessModes | indent 2 }}
      {{- with .Values.redis.persistence.storageClassName }}
      storageClassName: {{ . }}
      {{- end }}
      resources:
        requests:
          storage: "{{ .Values.redis.persistence.size }}"